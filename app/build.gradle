/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.json:json:20240303'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation("at.favre.lib:bcrypt:0.10.2")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'smart_home.MainWindow'
}

// Custom task to run DonutIndicatorTestApp
task testCircleIndicator(type: JavaExec) {
    group = 'application'

    // Specify the main class to run
    mainClass.set('test.CircleIndicatorTest')

    // Set the classpath to include the main runtime classpath
    classpath = sourceSets.main.runtimeClasspath
}

task testFetchData(type: JavaExec) {
    group = 'application'

    // Specify the main class to run
    mainClass.set('test.FetchDataTest')

    // Set the classpath to include the main runtime classpath
    classpath = sourceSets.main.runtimeClasspath
}

task testBatteryLevel(type: JavaExec) {
    group = 'application'

    // Specify the main class to run
    mainClass.set('test.BatteryLevelTest')

    // Set the classpath to include the main runtime classpath
    classpath = sourceSets.main.runtimeClasspath
}
